version: 2.1
jobs:
  build-and-test:
    working_directory: ~/fishing-booker/backend/fishing-booker
    docker:
      - image: cimg/openjdk:11.0
        environment:
          PGHOST: localhost
          PGUSER: postgres
      - image: circleci/postgres:9.6.2-alpine
        auth:
          username: lukam99
          password: $DOCKERHUB_ACCESS_TOKEN
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: fishing
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout:
          path: ~/fishing-booker
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt-get update
      - run: sudo apt-get upgrade
      - run: sudo apt-get install postgresql-client
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Test
          command: mvn test
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=LukaM1999_fishing-booker

orbs:
  heroku: circleci/heroku@1.2.6
  sonarcloud: sonarsource/sonarcloud@1.0.3
workflows:
  heroku_deploy:
    jobs:
      - build-and-test:
          context: SonarCloud
          filters:
                branches:
                  only:
                    - develop
      # - heroku/deploy-via-git:
      #     filters:
      #           branches:
      #             only:
      #               - develop
      #     requires:
      #       - build-and-test